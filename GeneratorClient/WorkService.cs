//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34014
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorServiceContracts
{
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IWorkServiceAsync")]
    public interface IWorkServiceAsync
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IWorkServiceAsync/ServiceOperation", ReplyAction = "http://tempuri.org/IWorkServiceAsync/ServiceOperationResponse")]
        GeneratorServiceContracts.Message ServiceOperation(GeneratorServiceContracts.Message msg);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IWorkServiceAsync/ServiceOperation", ReplyAction = "http://tempuri.org/IWorkServiceAsync/ServiceOperationResponse")]
        System.IAsyncResult BeginServiceOperation(GeneratorServiceContracts.Message msg, System.AsyncCallback callback, object asyncState);

        GeneratorServiceContracts.Message EndServiceOperation(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkServiceChannel : IWorkServiceAsync, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public ServiceOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public GeneratorServiceContracts.Message Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((GeneratorServiceContracts.Message)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkServiceClient : System.ServiceModel.ClientBase<IWorkServiceAsync>, IWorkServiceAsync
    {

        private BeginOperationDelegate onBeginServiceOperationDelegate;

        private EndOperationDelegate onEndServiceOperationDelegate;

        private System.Threading.SendOrPostCallback onServiceOperationCompletedDelegate;

        public WorkServiceClient()
        {
        }

        public WorkServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public WorkServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public WorkServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public WorkServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public event System.EventHandler<ServiceOperationCompletedEventArgs> ServiceOperationCompleted;

        public GeneratorServiceContracts.Message ServiceOperation(GeneratorServiceContracts.Message msg)
        {
            return base.Channel.ServiceOperation(msg);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginServiceOperation(GeneratorServiceContracts.Message msg, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginServiceOperation(msg, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeneratorServiceContracts.Message EndServiceOperation(System.IAsyncResult result)
        {
            return base.Channel.EndServiceOperation(result);
        }

        private System.IAsyncResult OnBeginServiceOperation(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            GeneratorServiceContracts.Message msg = ((GeneratorServiceContracts.Message)(inValues[0]));
            return this.BeginServiceOperation(msg, callback, asyncState);
        }

        private object[] OnEndServiceOperation(System.IAsyncResult result)
        {
            GeneratorServiceContracts.Message retVal = this.EndServiceOperation(result);
            return new object[] {
                retVal};
        }

        private void OnServiceOperationCompleted(object state)
        {
            if ((this.ServiceOperationCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ServiceOperationCompleted(this, new ServiceOperationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ServiceOperationAsync(GeneratorServiceContracts.Message msg)
        {
            this.ServiceOperationAsync(msg, null);
        }

        public void ServiceOperationAsync(GeneratorServiceContracts.Message msg, object userState)
        {
            if ((this.onBeginServiceOperationDelegate == null))
            {
                this.onBeginServiceOperationDelegate = new BeginOperationDelegate(this.OnBeginServiceOperation);
            }
            if ((this.onEndServiceOperationDelegate == null))
            {
                this.onEndServiceOperationDelegate = new EndOperationDelegate(this.OnEndServiceOperation);
            }
            if ((this.onServiceOperationCompletedDelegate == null))
            {
                this.onServiceOperationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnServiceOperationCompleted);
            }
            base.InvokeAsync(this.onBeginServiceOperationDelegate, new object[] {
                    msg}, this.onEndServiceOperationDelegate, this.onServiceOperationCompletedDelegate, userState);
        }
    }
}
